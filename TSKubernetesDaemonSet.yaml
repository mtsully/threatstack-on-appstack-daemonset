kind: ServiceAccount
apiVersion: v1
metadata:
  name: threatstack-agent
  namespace: default
---
# Deploys a single agent. Collects events from the Kubernetes API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: threatstack-agent-kubernetes-api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "threatstack-agent-kubernetes-api"
  template:
    metadata:
      labels:
        name: "threatstack-agent-kubernetes-api"
      name: threatstack-agent-kubernetes-api
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccountName: threatstack-agent
      containers:
      - image: threatstack/ts-docker2:latest
        imagePullPolicy: Always
        name: threatstack-agent
        livenessProbe:
          exec:
            command: [ "sh", "-c", "tsagent status" ]
          initialDelaySeconds: 15
          periodSeconds: 360
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        env:
          - name: THREATSTACK_SETUP_ARGS
            value: "--deploy-key <REPLACE_WITH_VALID_DEPLOY_KEY> --ruleset 'Base Rule Set, Docker Rule Set, Kubernetes Rule Set'"
          - name: THREATSTACK_CONFIG_ARGS
            value: "enable_kubes 1 enable_kubes_master 1 log.level info enable_bpf_sensors false"
        securityContext:
          privileged: false
          capabilities:
            add: ["AUDIT_CONTROL", "SYS_ADMIN", "SYS_PTRACE", "SYS_NICE"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        volumeMounts:
          - name: hostfs
            mountPath: /threatstackfs
      volumes:
        - hostPath:
            path: /
          name: hostfs
---
# Deploys our agent to all nodes in the cluster. Collects all events except for Kubernetes events. Audit, file, login, etc.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: threatstack-agent
spec:
  selector:
    matchLabels:
      name: "threatstack-agent"
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/threatstack-agent: unconfined
      labels:
        name: "threatstack-agent"
      name: threatstack-agent
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - image: threatstack/ts-docker2:latest
        imagePullPolicy: Always
        name: threatstack-agent
        command: ["bash"]
        args: ["-c", "chroot /threatstackfs /bin/bash -c 'service auditd stop; systemctl disable auditd'; eval tsagent setup $THREATSTACK_SETUP_ARGS; eval tsagent config --set $THREATSTACK_CONFIG_ARGS; sleep 5; /opt/threatstack/sbin/tsagentd -logstdout"]
        livenessProbe:
          exec:
            command: [ "sh", "-c", "tsagent status" ]
          initialDelaySeconds: 15
          periodSeconds: 360
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        env:
          - name: THREATSTACK_SETUP_ARGS
            value: "--deploy-key <REPLACE_WITH_VALID_DEPLOY_KEY> --ruleset 'Base Rule Set, Docker Rule Set, Kubernetes Rule Set'"
          - name: THREATSTACK_CONFIG_ARGS
            value: "enable_kubes 1 log.level info enable_bpf_sensors false"
        securityContext:
          privileged: false
          capabilities:
            add: ["AUDIT_CONTROL", "SYS_ADMIN", "SYS_PTRACE", "SYS_NICE"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        volumeMounts:
          - name: hostfs
            mountPath: /threatstackfs
            readOnly: true
          - name: kernel-debug
            mountPath: /sys/kernel/debug
      volumes:
        - hostPath:
            path: /
          name: hostfs
        - hostPath:
            path: /sys/kernel/debug
          name: kernel-debug
